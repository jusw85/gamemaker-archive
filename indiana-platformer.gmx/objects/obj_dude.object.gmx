<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dude</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = STATE_STANDING;
facing_direction = DIRECTION_RIGHT;
animation_speed = 0.30;
jumping_speed = -10;
jumping_gravity = 0.5;
sound_playing = false;
outside_room = false;

bullet_count = 0;
bullet_recharge = 10;
bomb_count = 0;
bomb_recharge = 30;
apple_count = 0;
apple_recharge = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// in air gravity
if (place_free(x, y+8))
{
    gravity = jumping_gravity;
    state = STATE_JUMPING
}
else
{
    gravity = 0;
}

// limit vspeed
if (vspeed &gt;= 12)
{
    vspeed = 12;
}

// moving
if (state == STATE_STANDING)
{
    image_speed = 0;
    image_index = 0;
    sound_playing = false;
    audio_stop_sound(snd_walkgrass);
} 
else if (state == STATE_MOVING)
{
    image_speed = animation_speed;
    if (!sound_playing)
    {
        audio_play_sound(snd_walkgrass, 10, true);
        sound_playing = true;
    }
}
if (state == STATE_JUMPING)
{
    image_speed = 0;
    image_index = 0;
    sound_playing = false;
    audio_stop_sound(snd_walkgrass);
} 

// handle weapons
bullet_count = max(0, bullet_count-1);
if (bullet_count &lt;= 0)
{
    if (keyboard_check(ord('X')))
    {
        var bullet;
        bullet = instance_create(x, y, obj_bullet);
        with (bullet)
        {
            speed = 10;
            direction = other.facing_direction;
            if (direction == DIRECTION_LEFT)
            {
                image_xscale = -1;
            }
        }
        bullet_count = bullet_recharge;
        audio_play_sound(snd_gunshot, 10, false);
    }
}

bomb_count = max(0, bomb_count-1);
if (bomb_count &lt;= 0)
{
    if (keyboard_check(ord('Z')))
    {
        var bomb;
        /*
        bomb = instance_create(x, y, obj_bomb);
        bomb.speed = 10;
        bomb.direction = direction;
        bomb_count = bomb_recharge;
        */
    }
}

apple_count = max(0, apple_count-1);
if (apple_count &lt;= 0)
{
    if (keyboard_check(ord('C')))
    {
        var apple;
        /*
        apple = instance_create(x, y, obj_apple);
        apple.speed = 10;
        apple.direction = direction;
        apple_count = apple_recharge;
        */
    }
}

if (outside_room &amp;&amp; y &gt; room_height)
{
    outside_room = false;
    x = xstart;
    y = ystart;
    gravity = 0;
    vspeed = 0;
    audio_play_sound(snd_fall, 10, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// collision vertically
move_contact_solid(direction, 12);
vspeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (place_free(x+4, y))
{
    x += 4;
}
else
{
    move_contact_solid(0, 4);
}
state = STATE_MOVING;
facing_direction = DIRECTION_RIGHT;
image_xscale = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (place_free(x-4, y))
{
    x -= 4;
}
else
{
    move_contact_solid(180, 4);
}
state = STATE_MOVING;
facing_direction = DIRECTION_LEFT;
image_xscale = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// standing on floor
if (!place_free(x, y+1))
{
    vspeed = jumping_speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>outside_room = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = STATE_STANDING;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = STATE_STANDING;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
